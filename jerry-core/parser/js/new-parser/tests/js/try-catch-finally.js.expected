
--- Script parsing start ---

  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  4] CBC_CALL_IDENT_PUSH_RESULT idx:1->ident(x) byte_arg:0
  [  3] CBC_POP_BLOCK
  [  3] CBC_EXT_FINALLY
  [  4] CBC_CALL_IDENT_PUSH_RESULT idx:1->ident(x) byte_arg:0
  [  3] CBC_POP_BLOCK
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  4] CBC_CALL_IDENT_PUSH_RESULT idx:1->ident(x) byte_arg:0
  [  3] CBC_POP_BLOCK
  [  4] CBC_EXT_CATCH
  [  3] CBC_ASSIGN_IDENT idx:2->ident(exc)
  [  4] CBC_CALL_IDENT_PUSH_RESULT idx:1->ident(x) byte_arg:0
  [  3] CBC_POP_BLOCK
  [  3] CBC_EXT_FINALLY
  [  4] CBC_CALL_IDENT_PUSH_RESULT idx:1->ident(x) byte_arg:0
  [  3] CBC_POP_BLOCK
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  4] CBC_CALL_IDENT_PUSH_RESULT idx:1->ident(x) byte_arg:0
  [  3] CBC_POP_BLOCK
  [  4] CBC_EXT_CATCH
  [  3] CBC_ASSIGN_IDENT idx:2->ident(exc)
  [  4] CBC_CALL_IDENT_PUSH_RESULT idx:1->ident(x) byte_arg:0
  [  3] CBC_POP_BLOCK
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  0] CBC_JUMP_FORWARD
  [  3] CBC_EXT_TRY_CREATE_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  4] CBC_EXT_CATCH
  [  3] CBC_ASSIGN_IDENT idx:3->ident(evall)
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_EXT_FINALLY
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  3] CBC_JUMP_FORWARD_EXIT_CONTEXT
  [  0] CBC_CONTEXT_END
  [  1] CBC_PUSH_FALSE
  [  0] CBC_BRANCH_IF_TRUE_BACKWARD
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

Final byte code dump:

  Maximum stack depth: 4
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 4
  Const literal range end: 4
  Literal range end: 4

   0 : CBC_PUSH_IDENT idx:0(ident)->ident(next_statement)
   2 : CBC_POP_BLOCK
   3 : CBC_EXT_TRY_CREATE_CONTEXT offset:7(->10)
   6 : CBC_CALL_IDENT_PUSH_RESULT byte_arg:0 idx:1(ident)->ident(x)
   9 : CBC_POP_BLOCK
  10 : CBC_EXT_FINALLY offset:8(->18)
  13 : CBC_CALL_IDENT_PUSH_RESULT byte_arg:0 idx:1(ident)->ident(x)
  16 : CBC_POP_BLOCK
  17 : CBC_CONTEXT_END
  18 : CBC_PUSH_IDENT idx:0(ident)->ident(next_statement)
  20 : CBC_POP_BLOCK
  21 : CBC_EXT_TRY_CREATE_CONTEXT offset:7(->28)
  24 : CBC_CALL_IDENT_PUSH_RESULT byte_arg:0 idx:1(ident)->ident(x)
  27 : CBC_POP_BLOCK
  28 : CBC_EXT_CATCH offset:9(->37)
  31 : CBC_ASSIGN_IDENT idx:2(ident)->ident(exc)
  33 : CBC_CALL_IDENT_PUSH_RESULT byte_arg:0 idx:1(ident)->ident(x)
  36 : CBC_POP_BLOCK
  37 : CBC_EXT_FINALLY offset:8(->45)
  40 : CBC_CALL_IDENT_PUSH_RESULT byte_arg:0 idx:1(ident)->ident(x)
  43 : CBC_POP_BLOCK
  44 : CBC_CONTEXT_END
  45 : CBC_PUSH_IDENT idx:0(ident)->ident(next_statement)
  47 : CBC_POP_BLOCK
  48 : CBC_EXT_TRY_CREATE_CONTEXT offset:7(->55)
  51 : CBC_CALL_IDENT_PUSH_RESULT byte_arg:0 idx:1(ident)->ident(x)
  54 : CBC_POP_BLOCK
  55 : CBC_EXT_CATCH offset:9(->64)
  58 : CBC_ASSIGN_IDENT idx:2(ident)->ident(exc)
  60 : CBC_CALL_IDENT_PUSH_RESULT byte_arg:0 idx:1(ident)->ident(x)
  63 : CBC_POP_BLOCK
  64 : CBC_CONTEXT_END
  65 : CBC_PUSH_IDENT idx:0(ident)->ident(next_statement)
  67 : CBC_POP_BLOCK
  68 : CBC_JUMP_FORWARD offset:38(->106)
  70 : CBC_EXT_TRY_CREATE_CONTEXT offset:11(->81)
  73 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:33(->106)
  75 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:31(->106)
  77 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:32(->109)
  79 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:30(->109)
  81 : CBC_EXT_CATCH offset:13(->94)
  84 : CBC_ASSIGN_IDENT idx:3(ident)->ident(evall)
  86 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:20(->106)
  88 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:18(->106)
  90 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:19(->109)
  92 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:17(->109)
  94 : CBC_EXT_FINALLY offset:12(->106)
  97 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:9(->106)
  99 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:7(->106)
 101 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:8(->109)
 103 : CBC_JUMP_FORWARD_EXIT_CONTEXT offset:6(->109)
 105 : CBC_CONTEXT_END
 106 : CBC_PUSH_FALSE
 107 : CBC_BRANCH_IF_TRUE_BACKWARD offset:37(->70)
 109 : CBC_PUSH_IDENT idx:0(ident)->ident(next_statement)
 111 : CBC_POP_BLOCK
 112 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 113 bytes

Script parsing successfully completed. Total byte code size: 113 bytes

--- Script parsing end ---

