
--- Script parsing start ---


--- Function parsing start ---

  [  1] CBC_ADD_TWO_LITERALS idx:0->ident(a) idx:1->ident(b)
  [  0] CBC_POP

Final byte code dump:

  Maximum stack depth: 1
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 2
  Const literal range end: 2
  Literal range end: 2

   0 : CBC_ADD_TWO_LITERALS idx:0(ident)->ident(a) idx:1(ident)->ident(b)
   3 : CBC_POP
   4 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 5 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  2] CBC_PUSH_TWO_LITERALS idx:0->ident(x) idx:1->ident(y)
  [  2] CBC_MULTIPLY_RIGHT_LITERAL idx:2->number(4)
  [  1] CBC_ADD
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 2
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 2
  Const literal range end: 3
  Literal range end: 3

   0 : CBC_PUSH_TWO_LITERALS idx:0(ident)->ident(x) idx:1(ident)->ident(y)
   3 : CBC_MULTIPLY_RIGHT_LITERAL idx:2(lit)->number(4)
   5 : CBC_ADD
   6 : CBC_RETURN

Byte code size: 7 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  1] CBC_PUSH_IDENT idx:0->ident(x)
  [  0] CBC_BRANCH_IF_FALSE_FORWARD
  [  1] CBC_PUSH_LITERAL idx:1->number(8)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 1
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 2
  Literal range end: 2

   0 : CBC_PUSH_IDENT idx:0(ident)->ident(x)
   2 : CBC_BRANCH_IF_FALSE_FORWARD offset:5(->7)
   4 : CBC_PUSH_LITERAL idx:1(lit)->number(8)
   6 : CBC_RETURN
   7 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 8 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  0] CBC_JUMP_FORWARD
  [  0] CBC_RETURN_WITH_UNDEFINED
  [  0] CBC_JUMP_BACKWARD

Final byte code dump:

  Maximum stack depth: 0
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Const literal range end: 0
  Literal range end: 0

   0 : CBC_JUMP_FORWARD offset:3(->3)
   2 : CBC_RETURN_WITH_UNDEFINED
   3 : CBC_JUMP_BACKWARD offset:1(->2)
   5 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 6 bytes

--- Function parsing end ---


--- Function parsing start ---

  [  1] CBC_PUSH_IDENT idx:0->ident(x)
  [  0] CBC_BRANCH_IF_FALSE_FORWARD
  [  1] CBC_PUSH_LITERAL idx:1->number(1)
  [  0] CBC_RETURN
  [  0] CBC_JUMP_FORWARD
  [  1] CBC_PUSH_LITERAL idx:2->number(2)
  [  0] CBC_RETURN

Final byte code dump:

  Maximum stack depth: 1
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 1
  Const literal range end: 3
  Literal range end: 3

   0 : CBC_PUSH_IDENT idx:0(ident)->ident(x)
   2 : CBC_BRANCH_IF_FALSE_FORWARD offset:7(->9)
   4 : CBC_PUSH_LITERAL idx:1(lit)->number(1)
   6 : CBC_RETURN
   7 : CBC_JUMP_FORWARD offset:5(->12)
   9 : CBC_PUSH_LITERAL idx:2(lit)->number(2)
  11 : CBC_RETURN
  12 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 13 bytes

--- Function parsing end ---


Final byte code dump:

  Maximum stack depth: 0
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 5
  Const literal range end: 5
  Literal range end: 10

   0 : CBC_INITIALIZE_VAR idx:0(ident)->var_ident(f) idx:5(lit)->function
   3 : CBC_INITIALIZE_VAR idx:1(ident)->var_ident(g) idx:6(lit)->function
   6 : CBC_INITIALIZE_VAR idx:2(ident)->var_ident(h) idx:7(lit)->function
   9 : CBC_INITIALIZE_VAR idx:3(ident)->var_ident(i) idx:8(lit)->function
  12 : CBC_INITIALIZE_VAR idx:4(ident)->var_ident(k) idx:9(lit)->function
  15 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 16 bytes

Script parsing successfully completed. Total byte code size: 55 bytes

--- Script parsing end ---

